
Each span except the first starts on a word and ends in whitespace.
(The last span always has some possibly dummy whitespace)
A span can be several words. (A word can have been changed to many new words.)

Links are injective: two spans cannot map to the same token.
(If span i and span j both have links to some token x then i = j.)

This means that we cannot have a discontinuous edit, i.e.

      aaa
     /    \
    a1  b a2

Here aaa is replaced with a1 b a2, but the example links both a1 and a2 to the original
word aaa, and not b, and this is not allowed.

We need to mark which words have been moved for word order.
Invariant: excluding the words that have been marked as changed place
the links form  and increasing subsequence.

Then a way is needed to explicitly mark words moved for word order
when there has been a crossing and both words can be deemed to
be out of order:

     a   b
      \ /
       x
      / \
     b   a

(The other alternatives are that a is fixed and b has moved and vice versa)

Invariant: Only spans with links can be marked as moved:
spans without links (inserted missing words) cannot.

Refining the invariant to no span can start with whitespace, not even
the first. Initial whitespace on a document must be trimmed.
(This representation allows trailing whitespace. Could reverse it
to allow initial whitespace)


The links do not need to be sorted: it contains the order in which
the tokens were when they were merged

There is a way to introduce text that is not linked to anything,
chop_up_insertions: if a span contains non-final whitespace, and is linked to
exactly one word, and that word is the prefix or suffix, make this an insertion



